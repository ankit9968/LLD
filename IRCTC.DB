CREATE TABLE users (
    user_id INT PRIMARY KEY AUTO_INCREMENT,
    user_name VARCHAR(255) NOT NULL
);

CREATE TABLE stations (
    station_id INT PRIMARY KEY AUTO_INCREMENT,
    station_name VARCHAR(255) NOT NULL,
    station_code VARCHAR(10) UNIQUE NOT NULL
);

CREATE TABLE trains (
    train_id INT PRIMARY KEY AUTO_INCREMENT,
    train_number VARCHAR(10) UNIQUE NOT NULL
);

CREATE TABLE train_route (
    train_id INT,
    station_id INT,
    stop_sequence INT NOT NULL,
    FOREIGN KEY (train_id) REFERENCES trains(train_id),
    FOREIGN KEY (station_id) REFERENCES stations(station_id),
    PRIMARY KEY (train_id, station_id)
);

CREATE TABLE seats (
    seat_id INT PRIMARY KEY AUTO_INCREMENT,
    seat_number VARCHAR(10) NOT NULL,
    train_id INT,
    FOREIGN KEY (train_id) REFERENCES trains(train_id)
);

CREATE TABLE bookings (
    booking_id INT PRIMARY KEY AUTO_INCREMENT,
    user_id INT,
    train_id INT,
    seat_id INT,
    source_station_id INT,
    destination_station_id INT,
    booking_status ENUM('Active', 'Cancelled') NOT NULL,
    booking_time TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    FOREIGN KEY (user_id) REFERENCES users(user_id),
    FOREIGN KEY (train_id) REFERENCES trains(train_id),
    FOREIGN KEY (seat_id) REFERENCES seats(seat_id),
    FOREIGN KEY (source_station_id) REFERENCES stations(station_id),
    FOREIGN KEY (destination_station_id) REFERENCES stations(station_id)
);

Get All Available Seats for a Route
:=>) SELECT COUNT(*) FROM Bookings 
WHERE seat_id = :seat_id 
AND segment_id IN (
    SELECT segment_id FROM Segment_Stations 
    WHERE train_id = :train_id 
    AND (
        (start_station_id <= :start_station_id AND end_station_id > :start_station_id) 
        OR 
        (start_station_id < :end_station_id AND end_station_id >= :end_station_id)
    )
)
AND booking_status = 'Active';

